/*! grafana - v3.0.0-pre1 - 2016-02-22
 * Copyright (c) 2016 Torkel Ã–degaard; Licensed Apache-2.0 */

System.register(["../../../../../test/lib/common","../module","../../../../../test/specs/helpers"],function(a){var b,c,d;return{setters:[function(a){b=a},function(a){c=a},function(a){d=a}],execute:function(){b.describe("GraphCtrl",function(){var a=new d["default"].ControllerTestContext;b.beforeEach(b.angularMocks.module("grafana.services")),b.beforeEach(b.angularMocks.module("grafana.controllers")),b.beforeEach(a.providePhase()),b.beforeEach(a.createPanelController(c.GraphCtrl)),b.describe("get_data with 2 series",function(){b.beforeEach(function(){a.annotationsSrv.getAnnotations=b.sinon.stub().returns(a.$q.when([])),a.datasource.query=b.sinon.stub().returns(a.$q.when({data:[{target:"test.cpu1",datapoints:[[1,10]]},{target:"test.cpu2",datapoints:[[1,10]]}]})),a.ctrl.render=b.sinon.spy(),a.ctrl.refreshData(a.datasource),a.scope.$digest()}),b.it("should send time series to render",function(){var c=a.ctrl.render.getCall(0).args[0];b.expect(c.length).to.be(2)}),b.describe("get_data failure following success",function(){b.beforeEach(function(){a.datasource.query=b.sinon.stub().returns(a.$q.reject("Datasource Error")),a.ctrl.refreshData(a.datasource),a.scope.$digest()})})})})}}});